# SPDX-License-Identifier: LGPL-3.0-or-later 

# Copyright (C) 2023 Perry Werneck <perry.werneck@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

#---[ Library configuration ]------------------------------------------------------------

PACKAGE_NAME=@PACKAGE_NAME@
PYTHON_MODULE=$(PACKAGE_NAME)

LIBRARY_SOURCES= \
	$(wildcard src/common/*.cc) \
	$(wildcard src/os/@OSNAME@/*.cc)

PYTHON_SOURCES= \
	$(wildcard src/python/*.c) \
	$(wildcard src/python/*.cc)
	
BUILD_TARGETS=@BUILD_TARGETS@
TARGETS=@OSNAME@-lib devel application

#---[ Tools ]----------------------------------------------------------------------------

CXX=@CXX@
CC=@CC@
LD=@CXX@
LN_S=@LN_S@
MKDIR=@MKDIR_P@
INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
XGETTEXT=@XGETTEXT@
MSGCAT=@MSGCAT@
WINDRES=@WINDRES@
AR=@AR@
VALGRIND=@VALGRIND@
DLLTOOL=@DLLTOOL@

#---[ Paths ]----------------------------------------------------------------------------

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
sbindir=@sbindir@
libdir=@libdir@
includedir=@includedir@
datarootdir=@datarootdir@
localedir=@localedir@
docdir=@docdir@
sysconfdir=/etc
PYTHON_SITELIB=@PYTHON_SITELIB@

BASEDIR=@BASEDIR@

OBJDIR=.obj
OBJDBG=$(OBJDIR)/Debug
OBJRLS=$(OBJDIR)/Release

BINDIR=.bin
BINDBG=$(BINDIR)/Debug
BINRLS=$(BINDIR)/Release

#---[ Rules ]----------------------------------------------------------------------------

CFLAGS= \
	@CXXFLAGS@ \
	-DHAVE_CONFIG_H=1 \
	-fPIC \
	-Isrc/include \
	-DBUILD_DATE=`date +%Y%m%d`

CPPFLAGS= \
	@CPPFLAGS@

LDFLAGS=\
	@LDFLAGS@

LIBS= \
	@LIBS@

#---[ Debug Rules ]----------------------------------------------------------------------

$(OBJDBG)/%.o: \
	%.cc

	@echo $< ...
	@$(MKDIR) $(@D)

	@$(CXX) \
		$(CFLAGS) \
		$(CPPFLAGS) \
		-DDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CXX) \
		$(CFLAGS) \
		$(CPPFLAGS) \
		-Wall -Wextra -fstack-check \
		-DDEBUG=1 \
		-o $@ \
		-c $<

$(OBJDBG)/%.o: \
	%.c

	@echo $< ...
	@$(MKDIR) $(dir $@)

	@$(CC) \
		$(CFLAGS) \
		-DDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CC) \
		$(CFLAGS) \
		-Wall -Wextra -fstack-check \
		-DDEBUG=1 \
		-o $@ \
		-c $<

$(OBJDBG)/%.o: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(@D)
	@$(WINDRES) $< -O coff -o $@

#---[ Release Rules ]--------------------------------------------------------------------

$(OBJRLS)/%.o: \
	%.cc

	@echo $< ...
	@$(MKDIR) $(@D)

	@$(CXX) \
		$(CFLAGS) \
		$(CPPFLAGS) \
		-DNDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CXX) \
		$(CFLAGS) \
		$(CPPFLAGS) \
		-DNDEBUG=1 \
		-o $@ \
		-c $<

$(OBJRLS)/%.o: \
	%.c

	@echo $< ...
	@$(MKDIR) $(dir $@)

	@$(CC) \
		$(CFLAGS) \
		-DNDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CC) \
		$(CFLAGS) \
		-Wall -Wextra -fstack-check \
		-DNDEBUG=1 \
		-o $@ \
		-c $<

$(OBJRLS)/%.o: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(@D)
	@$(WINDRES) $< -O coff -o $@

#---[ Release Targets ]------------------------------------------------------------------

all: \
	$(foreach TARGET, $(BUILD_TARGETS), $(BINRLS)/$(TARGET)) \
	$(BINRLS)/lib$(PACKAGE_NAME).static.a

Release: \
	$(foreach TARGET, $(BUILD_TARGETS), $(BINRLS)/$(TARGET))

$(BINRLS)/@SONAME@: \
	$(foreach SRC, $(basename $(LIBRARY_SOURCES)), $(OBJRLS)/$(SRC).o)

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		@DLL_LDFLAGS@ \
		-o $@ \
		$(LDFLAGS) \
		$^ \
		$(LIBS)

$(BINRLS)/$(PYTHON_MODULE)@LIBEXT@: \
	$(foreach SRC, $(basename $(PYTHON_SOURCES)), $(OBJRLS)/$(SRC).o) \
	$(BINRLS)/@SONAME@

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		@DLL_LDFLAGS@ \
		-o $@ \
		$(LDFLAGS) \
		$^ \
		$(LIBS) \
		@PYTHON_LIBS@

$(BINRLS)/lib$(PACKAGE_NAME).static.a: \
	$(foreach SRC, $(basename $(LIBRARY_SOURCES)), $(OBJRLS)/$(SRC).o)

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(AR) rcs $@ $^

$(BINRLS)/$(PACKAGE_NAME)@EXEEXT@: \
	$(foreach SRC, $(basename $(APPLICATION_SOURCES)), $(OBJRLS)/$(SRC).o) \
	$(BINRLS)/@SONAME@

	@$(MKDIR) $(@D)
	@echo $< ...
	$(LD) \
		-o $@ \
		$^ \
		-L$(BINRLS) \
		$(LDFLAGS) \
		$(LIBS)

#---[ Install Targets ]------------------------------------------------------------------

install: \
       $(foreach TARGET, $(TARGETS), install-$(TARGET))

install-application: \
	$(BINRLS)/$(PACKAGE_NAME)@EXEEXT@

	@$(MKDIR) \
		$(DESTDIR)$(sbindir)

	@$(INSTALL_PROGRAM) \
		$(BINRLS)/$(PACKAGE_NAME)@EXEEXT@ \
		$(DESTDIR)$(sbindir)/$(PACKAGE_NAME)@EXEEXT@

install-linux-lib: \
	$(BINRLS)/@SONAME@

	@$(MKDIR) \
		$(DESTDIR)$(libdir)

	@$(INSTALL_PROGRAM) \
		$(BINRLS)/@SONAME@ \
		$(DESTDIR)$(libdir)/@SONAME@

	@$(LN_S) \
		@SONAME@ \
		$(DESTDIR)$(libdir)/lib$(PACKAGE_NAME)@LIBEXT@

install-windows-lib: \
	$(BINRLS)/lib$(PACKAGE_NAME)@LIBEXT@

	@$(MKDIR) \
		$(DESTDIR)$(bindir)

	@$(INSTALL_PROGRAM) \
		$(BINRLS)/lib$(PACKAGE_NAME)@LIBEXT@ \
		$(DESTDIR)$(bindir)/$(PACKAGE_NAME)@LIBEXT@

	@$(MKDIR) \
		$(DESTDIR)$(libdir)

	@$(DLLTOOL) \
		--input-def $(BINRLS)/lib$(PACKAGE_NAME).def \
		--dllname lib$(PACKAGE_NAME).dll \
		--output-lib $(DESTDIR)$(libdir)/@SONAME@.a

	@$(MKDIR) \
		$(DESTDIR)$(datarootdir)/$(PACKAGE_NAME)/def

	@$(INSTALL_DATA) \
		$(BINRLS)/lib$(PACKAGE_NAME).def \
		$(DESTDIR)$(datarootdir)/$(PACKAGE_NAME)/def

install-devel: \
	$(BINRLS)/lib$(PACKAGE_NAME).static.a

	@$(MKDIR) \
		$(DESTDIR)$(includedir)/$(PACKAGE_NAME)/smbios

	@$(INSTALL_DATA) \
		src/include/smbios/*.h \
		$(DESTDIR)$(includedir)/$(PACKAGE_NAME)/smbios

	@mkdir -p $(DESTDIR)$(libdir)/pkgconfig
	@$(INSTALL_DATA) \
		$(PACKAGE_NAME).pc \
		$(DESTDIR)$(libdir)/pkgconfig/$(PACKAGE_NAME).pc
		
	@$(INSTALL_DATA) \
		$(PACKAGE_NAME).static.pc \
		$(DESTDIR)$(libdir)/pkgconfig/$(PACKAGE_NAME).static.pc

	@$(INSTALL_DATA) \
		$(BINRLS)/lib$(PACKAGE_NAME).static.a \
		$(DESTDIR)$(libdir)/lib$(PACKAGE_NAME).static.a

#---[ Uninstall Targets ]----------------------------------------------------------------

uninstall: \
       $(foreach TARGET, $(TARGETS), uninstall-$(TARGET))

uninstall-application:

	@rm -f \
		$(DESTDIR)$(bindir)/$(PACKAGE_NAME)@EXEEXT@

uninstall-linux-lib:

	@rm -f \
		$(DESTDIR)$(libdir)/@SONAME@

	@rm -f \
		$(DESTDIR)$(libdir)/lib$(PACKAGE_NAME)@LIBEXT@

uninstall-windows-lib:

	@rm -f \
		$(DESTDIR)$(bindir)/@SONAME@

	@rm -f \
		$(DESTDIR)$(libdir)/@SONAME@.a

uninstall-devel:

	@rm -fr \
		$(DESTDIR)$(includedir)/$(PACKAGE_NAME)


#---[ Debug Targets ]--------------------------------------------------------------------

Debug: \
	$(BINDBG)/@SONAME@
	
$(BINDBG)/$(PACKAGE_NAME)@EXEEXT@: \
	$(foreach SRC, $(basename $(APPLICATION_SOURCES)), $(OBJDBG)/$(SRC).o) \
	$(BINDBG)/@SONAME@

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		-o $@ \
		$^ \
		-L$(BINDBG) \
		-Wl,-rpath,$(BINDBG) \
		$(LDFLAGS) \
		$(BINDBG)/@SONAME@ \
		$(LIBS)


$(BINDBG)/@SONAME@: \
	$(foreach SRC, $(basename $(LIBRARY_SOURCES)), $(OBJDBG)/$(SRC).o)

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		@DLL_LDFLAGS@ \
		-Wl,-rpath,$(BINDBG) \
		-o $@ \
		$(LDFLAGS) \
		$^ \
		$(LIBS)

$(BINDBG)/$(PYTHON_MODULE)@LIBEXT@: \
	$(foreach SRC, $(basename $(PYTHON_SOURCES)), $(OBJDBG)/$(SRC).o) \
	$(BINDBG)/@SONAME@

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		@DLL_LDFLAGS@ \
		-Wl,-rpath,$(BINDBG) \
		-o $@ \
		$(LDFLAGS) \
		$^ \
		$(LIBS) \
		@PYTHON_LIBS@

run: \
	$(BINDBG)/$(PACKAGE_NAME)@EXEEXT@

ifeq ($(VALGRIND),no)

	@LD_LIBRARY_PATH=$(BINDBG) \
		$(BINDBG)/$(PACKAGE_NAME)@EXEEXT@ -a

else
	@touch valgrind.suppression

	@LD_LIBRARY_PATH=$(BINDBG) \
		$(VALGRIND) --leak-check=full --track-origins=yes --gen-suppressions=all --suppressions=valgrind.suppression \
		$(BINDBG)/$(PACKAGE_NAME)@EXEEXT@ -a
endif

#---[ Clean Targets ]--------------------------------------------------------------------

clean: \
	cleanDebug \
	cleanRelease

cleanDebug:

	@rm -fr $(OBJDBG)
	@rm -fr $(BINDBG)

cleanRelease:

	@rm -fr $(OBJRLS)
	@rm -fr $(BINRLS)

clean: \
	cleanDebug \
	cleanRelease


-include $(foreach SRC, $(basename $(LIBRARY_SOURCES) $(APPLICATION_SOURCES) $(PYTHON_SOURCES)), $(OBJDBG)/$(SRC).d)
-include $(foreach SRC, $(basename $(LIBRARY_SOURCES) $(APPLICATION_SOURCES) $(PYTHON_SOURCES)), $(OBJRLS)/$(SRC).d)


